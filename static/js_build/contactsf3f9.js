(function(){(function($){'use strict';window.GMapEventedObject=Class(EventedObject,function GMapEventedObject(cls,superclass){cls.defaults={};cls.NATIVE_EVENTS=[];cls.init=function(options){superclass.init.call(this);this.opts=$.extend({},this.defaults,options);this.native_events=[];this.onInit();var that=this;window.GMap.ready(function(){that.onMapReady();});};cls.onInit=function(){this.native=null;};cls.onMapReady=function(){this.makeNative();};cls.makeNative=function(){};cls.destroy=function(){this.native_events=[];superclass.destroy.call(this);};cls._addEventHandler=function(name,handler,opts){var evt_info=this._formatEventName(name);var evt_name=evt_info.name;if(evt_name&&(this.native_events.indexOf(evt_name)<0)&&(this.NATIVE_EVENTS.indexOf(evt_name)>=0)){var that=this;window.GMap.ready(function(){that.native_events.push(evt_name);that.native.addListener(evt_name,function(){var args=Array.prototype.slice.call(arguments);args.unshift(evt_name);that.trigger.apply(that,args);});});}
return superclass._addEventHandler.call(this,name,handler,opts);};});window.GMapObject=Class(window.GMapEventedObject,function GMapObject(cls,superclass){cls.defaults=$.extend({},superclass.defaults,{map:null});cls.NATIVE_EVENTS=[];cls.onMapReady=function(){superclass.onMapReady.call(this);this.map(this.opts.map);};cls.destroy=function(){this.map(null);this.trigger('destroy');superclass.destroy.call(this);};cls._mapAttach=function(){this.native.setMap(this._map.native);this.trigger('attached',this._map);this._map.trigger('attach',this);};cls._mapDetach=function(){this._map.trigger('detach',this);this.trigger('detached',this._map);this.native.setMap(null);};cls.map=function(value){if(value===undefined){return this._map;}
if(this._map){if(value===this._map){return this;}
this._mapDetach();this._map=null;}
if(value!==null){if(value instanceof window.GMap===false){this.error('value should be a GMap instance');return this;}
this._map=value;this._mapAttach();}
return this;};});window.GMapOverlayBase=Class(window.GMapObject,function GMapOverlayBase(cls,superclass){cls.layer='overlayLayer';cls.onInit=function(){superclass.onInit.call(this);this._buildDOM();};cls._nativeClass=function(){var native_class=new Function();native_class.prototype=new google.maps.OverlayView();var that=this;native_class.prototype.onAdd=function(){that.onAdd.call(that);};native_class.prototype.draw=function(){that.draw.call(that);};native_class.prototype.onRemove=function(){that.onRemove.call(that);};return native_class;};cls.makeNative=function(){var native_class=this._nativeClass();this.native=new native_class;};cls._buildDOM=function(){this.$container=$('</div>');};cls.destroy=function(){if(this.$container){this.$container.remove();this.$container=null;}
superclass.destroy.call(this);};cls.extendBounds=function(bounds,padding){if(typeof padding==='number'){padding={'h':padding,'v':padding}}
var projection=this.native.getProjection();var top_right=bounds.getNorthEast();var top_right_px=projection.fromLatLngToDivPixel(top_right);top_right_px.x+=padding.h;top_right_px.y-=padding.v;var bottom_left=bounds.getSouthWest();var bottom_left_px=projection.fromLatLngToDivPixel(bottom_left);bottom_left_px.x-=padding.h;bottom_left_px.y+=padding.v;bounds.extend(projection.fromDivPixelToLatLng(top_right_px));bounds.extend(projection.fromDivPixelToLatLng(bottom_left_px));return bounds;};cls.onAdd=function(){var panes=this.native.getPanes();panes[this.layer].appendChild(this.$container.get(0));};cls.draw=function(){};cls.onRemove=function(){if(this.$container){this.$container.remove();}};});window.GMapCustomMarker=Class(GMapOverlayBase,function GMapMarkerBase(cls,superclass){cls.layer='overlayMouseTarget';cls.defaults=$.extend({},superclass.defaults,{position:null});cls.onMapReady=function(){superclass.onMapReady.call(this);var that=this;google.maps.event.addDomListener(this.$container.get(0),'click',function(){that.trigger('click');});this.position(this.opts.position);};cls.onAdd=function(){superclass.onAdd.call(this);this.__visible=true;};cls.draw=function(){this.position(this._position);};cls.onRemove=function(){this.__visible=false;superclass.onRemove.call(this);};cls.position=function(value){if(value===undefined){return this._position;}
if(value){if(value instanceof window.GMapPoint===false){this.error('value should be a GMapPoint instance');return this;}
this._position=value;if(this.__visible){var overlayProjection=this.native.getProjection();if(!overlayProjection){return this;}
var coords=overlayProjection.fromLatLngToDivPixel(this._position.native);this.$container.css({left:coords.x,top:coords.y});}}
return this;};});window.GMapPoint=Class(EventedObject,function GMapPoint(cls,superclass){cls.init=function(lat,lng){superclass.init.call(this);this.lat=this._formatCoord(lat);if(this.lat===false){return this.raise('invalid latitude: '+lat);}
this.lng=this._formatCoord(lng);if(this.lng===false){return this.raise('invalid longitude: '+lng);}
var that=this;window.GMap.ready(function(){that.native=new google.maps.LatLng(that.lat,that.lng);});};cls._formatCoord=function(value){if(typeof value==='string'){value=parseFloat(value.replace(',','.'));}
if((typeof value==='number')&&!isNaN(value)){return value;}else{return false;}};cls.toString=function(){return[this.lat.toFixed(6),this.lng.toFixed(6)].join(', ');};});window.GMapPoint.fromString=function(str){var coords=str.split(',');if(coords.length!==2){console.error('invalid coords string: '+str);return;}
return this.create(coords[0],coords[1]);};window.GMapPoint.fromNative=function(native){return this.create(native.lat(),native.lng());};window.GMapLabel=Class(window.GMapOverlayBase,function GMapLabel(cls,superclass){cls.layer='overlayShadow';cls.defaults=$.extend({},superclass.defaults,{marker:null,text:''});cls.onInit=function(){superclass.onInit.call(this);if(this.opts.marker instanceof GMapMarker===false){return this.raise('marker should be a GMapMarker instance');}};cls._buildDOM=function(){this.$container=$('<div>').addClass('gmap-label').append($('<span>').addClass('gmap-label-text'));};cls.onMapReady=function(){superclass.onMapReady.call(this);this.text(this.opts.text);var that=this;this.opts.marker.on('position_changed.label',function(){that.draw();}).on('detached.label',function(){that.map(null);}).on('attached.label',function(map){that.map(map);}).on('destroy.label',function(){that.destroy();});};cls.destroy=function(){this.opts.marker.off('.label');superclass.destroy.call(this);};cls.draw=function(){var overlayProjection=this.native.getProjection();if(!overlayProjection)return;var coords=overlayProjection.fromLatLngToDivPixel(this.opts.marker.position().native);this.$container.css({left:coords.x,top:coords.y})};cls.text=function(value){if(value===undefined){return this.$container.find('span').text();}
if(value){if(typeof value!=='string'){this.error('value should be a string');return this;}
this.$container.find('span').text(value);}
return this;};});window.GMapMarker=Class(window.GMapObject,function GMapMarker(cls,superclass){cls.defaults=$.extend({},superclass.defaults,{position:null,icon:'',hint:'',label:'',draggable:false,balloonContent:''});cls.NATIVE_EVENTS=['click','dblclick','rightclick','mousedown','mouseup','mouseover','mouseout','dragstart','drag','dragend','position_changed','draggable_changed','icon_changed','title_changed'];cls.makeNative=function(){this.native=new google.maps.Marker();};cls.onMapReady=function(){superclass.onMapReady.call(this);this.position(this.opts.position);this.icon(this.opts.icon);this.hint(this.opts.hint);this.label(this.opts.label);this.draggable(this.opts.draggable);};cls.destroy=function(){google.maps.event.clearInstanceListeners(this.native);if(this._label){this._label.destroy();this._label=null;}
superclass.destroy.call(this);};cls.openBalloon=function(){var map=this.map();if(!map.balloon){return;}
map.balloon.close();if(this.opts.balloonContent){map.balloon.content(this.opts.balloonContent);}
if(map.balloon.content()){map.balloon.open(this);}};cls.position=function(value){if(value===undefined){return window.GMapPoint.fromNative(this.native.getPosition());}
if(value){if(value instanceof window.GMapPoint===false){this.error('value should be a GMapPoint instance');return this;}
this.native.setPosition(value.native);}
return this;};cls.icon=function(value){if(value===undefined){return this.native.getIcon();}
if(value){if((typeof value!=='string')&&(typeof value!=='object')){this.error('value should be a string or object');return this;}
this.native.setIcon(value);}
return this;};cls.hint=function(value){if(value===undefined){return this.native.getTitle();}
if(value){if(typeof value!=='string'){this.error('value should be a string');return this;}
this.native.setTitle(value);}
return this;};cls.label=function(value){if(value===undefined){return this.native.getTitle();}
if(value){if(typeof value!=='string'){this.error('value should be a string');return this;}
if(this._label){this._label.text(value);}else{this._label=window.GMapLabel({map:this._map,marker:this,text:value});}}else{if(this._label){this._label.destroy();this._label=null;}}
return this;};cls.draggable=function(value){if(value===undefined){return this.native.getDraggable();}
this.native.setDraggable(Boolean(value));return this;};});window.GMap=Class(window.GMapEventedObject,function GMap(cls,superclass){cls.defaults=$.extend({},superclass.defaults,{center:null,mapType:'roadmap',dblClickZoom:false,backgroundColor:'',draggable:true,wheel:false,noClear:false,styles:[{"featureType":"poi","elementType":"labels.icon","stylers":[{"visibility":"off"}]},{"featureType":"road.highway","elementType":"labels.icon","stylers":[{"visibility":"off"}]},{"featureType":"transit","elementType":"labels","stylers":[{"visibility":"off"}]}],zoom:14,minZoom:null,maxZoom:null,zoomControl:true});cls.DATA_KEY='gmap';cls.NATIVE_EVENTS=['click','dblclick','rightclick','mouseover','mousemove','mouseout','dragstart','drag','dragend','idle','center_changed','zoom_changed'];cls.MAP_TYPES=['hybrid','roadmap','satellite','terrain'];cls.init=function(root,options){this.$root=$(root).first();if(!this.$root.length){return this.raise('root element not found');}
superclass.init.call(this,options);this.$root.data(this.DATA_KEY,this);};cls.onInit=function(){superclass.onInit.call(this);this.markers=[];this.overlays=[];};cls.makeNative=function(){this.native=new google.maps.Map(this.$root.get(0),{center:this.opts.center,noClear:this.opts.noClear,backgroundColor:this.opts.backgroundColor,disableDefaultUI:true});var that=this;google.maps.event.addDomListener(window,'resize',$.rared(function(){that.trigger('resize');},300));this._complete=false;this.draggable(this.opts.draggable);this.mapType(this.opts.mapType);this.wheel(this.opts.wheel);this.dblClickZoom(this.opts.dblClickZoom);this.styles(this.opts.styles);this.zoom(this.opts.zoom);this.maxZoom(this.opts.maxZoom);this.minZoom(this.opts.minZoom);this.zoomControl(this.opts.zoomControl);setTimeout(function(){that.trigger('ready');},0);};cls.onMapReady=function(){superclass.onMapReady.call(this);this.on('attach',function(obj){if(obj instanceof GMapMarker){this.markers.push(obj);}else if(obj instanceof GMapOverlayBase){this.overlays.push(obj);}}).on('detach',function(obj){var index;if(obj instanceof GMapMarker){index=this.markers.indexOf(obj);if(index>=0){this.markers.splice(index,1);}}else if(obj instanceof GMapOverlayBase){index=this.overlays.indexOf(obj);if(index>=0){this.overlays.splice(index,1);}}});var MAX_LATITUDE=83.675733;var MIN_LATITUDE=-85.0511287798;var AMPLITUDE=2;this.on('idle',function(){this._complete=true;var center=this.center();if(center.lat<(MIN_LATITUDE-AMPLITUDE)){this.panTo(window.GMapPoint(MIN_LATITUDE,center.lng),100);}else if(center.lat>(MAX_LATITUDE+AMPLITUDE)){this.panTo(window.GMapPoint(MAX_LATITUDE,center.lng),100);}});};cls.destroy=function(){google.maps.event.clearListeners(this.native);while(this.markers.length){this.markers[0].destroy();}
while(this.overlays.length){this.overlays[0].destroy();}
superclass.destroy.call(this);};cls.center=function(value){if(value===undefined){return window.GMapPoint.fromNative(this.native.getCenter());}
if(value){if(value instanceof window.GMapMarker){this.native.setCenter(value.position().native);}else if(value instanceof window.GMapPoint){this.native.setCenter(value.native);}else{this.error('value should be a GMapPoint or GMapMarker instance');}}
return this;};cls.draggable=function(value){if(value===undefined){return this.native.draggable;}
this.native.setOptions({draggable:Boolean(value)});return this;};cls.panTo=function(center){if(center instanceof window.GMapMarker){var target=center.position();}else if(center instanceof window.GMapPoint){target=center;}else{this.error('value should be a GMapPoint or GMapMarker instance');return;}
this.native.panTo(target.native);};cls.panBy=function(dx,dy){dx=parseFloat(dx);dy=parseFloat(dy);if(isNaN(dx)){this.raise('dx should be a number');}
if(isNaN(dy)){this.raise('dy should be a number');}
this.native.panBy(dx,dy);};cls.wheel=function(value){if(value===undefined){return this.native.scrollwheel;}
this.native.setOptions({scrollwheel:Boolean(value)});return this;};cls.dblClickZoom=function(value){if(value===undefined){return!this.native.disableDoubleClickZoom;}
this.native.setOptions({disableDoubleClickZoom:!Boolean(value)});return this;};cls.mapType=function(value){if(value===undefined){return this.native.native.getMapTypeId();}
value=value.toLowerCase();if(this.MAP_TYPES.indexOf(value)<0){this.error('unknown map type: '+value);return this;}
this.native.setMapTypeId(value);return this;};cls.styles=function(value){if(value===undefined){return this.native.get('styles');}
if(value&&!$.isArray(value)){this.error('value should be an array');return this;}
this.native.set('styles',value);return this;};cls.zoom=function(value){if(value===undefined){return this.native.getZoom();}
if(value&&(typeof value!=='number')){this.error('value should be a number');return this;}
this.native.setZoom(value);return this;};cls.maxZoom=function(value){if(value===undefined){return this._maxZoom;}
if(value&&(typeof value!=='number')&&(value!==null)){this.error('value should be a number or null');return this;}
this._maxZoom=value;if(this._maxZoom){var that=this;this.on('zoom_changed.maxzoom',function(){var currentZoom=that.zoom();if(currentZoom>that._maxZoom){that.zoom(that._maxZoom);}});var currentZoom=this.zoom();if(currentZoom>this._maxZoom){this.zoom(this._maxZoom);}}else{this.off('zoom_changed.maxzoom');}
return this;};cls.minZoom=function(value){if(value===undefined){return this._minZoom;}
if(value&&(typeof value!=='number')&&(value!==null)){this.error('value should be a number or null');return this;}
this._minZoom=value;if(this._minZoom){var that=this;this.on('zoom_changed.minzoom',function(){var currentZoom=that.zoom();if(currentZoom<that._minZoom){that.zoom(that._minZoom);}});var currentZoom=this.zoom();if(currentZoom<this._minZoom){this.zoom(this._minZoom);}}else{this.off('zoom_changed.minzoom');}
return this;};cls.zoomControl=function(value){if(value===undefined){return this.native.zoomControl;}
this.native.setOptions({zoomControl:Boolean(value)});return this;};cls.bounds=function(value){if(value===undefined){return this.native.getBounds();}
this.native.fitBounds(value);return this;};cls.calcBounds=function(markers){var bounds=new google.maps.LatLngBounds();$.each(markers,function(i,item){if(item instanceof window.GMapPoint){bounds.extend(item.native);}else if((item instanceof window.GMapMarker)||(item instanceof window.GMapCustomMarker)){bounds.extend(item.position().native);}});return bounds;};cls.fitBounds=function(){var bounds=this.calcBounds(this.markers);this.bounds(bounds);};cls.removeAllMarkers=function(){var marker;while(marker=this.markers[0]){marker.destroy();}};cls.removeAllOverlays=function(){var overlay;while(overlay=this.overlays[0]){overlay.destroy();}};cls.geocode=function(address,success,error){if(!this._geocoder){this._geocoder=new google.maps.Geocoder();}
var that=this;this._geocoder.geocode({address:address},function(results,status){if(status===google.maps.GeocoderStatus.OK){var native_point=results[0].geometry.location;success.call(that,window.GMapPoint.fromNative(native_point));}else if($.isFunction(error)){error.call(that,status,results);}});};});var gmaps_ready=false;window.init_google_maps=function(){gmaps_ready=true;$(document).trigger('google-maps-ready');};window.GMap.ready=function(callback){if(gmaps_ready){callback()}else{$(document).one('google-maps-ready',callback);}};var key=document.documentElement.getAttribute('data-google-apikey');var lang=document.documentElement.getAttribute('lang');var script=document.createElement('script');script.src='https://maps.googleapis.com/maps/api/js?callback=init_google_maps&language='+lang+'&key='+(key||'');document.head.appendChild(script);})(jQuery);;(function($){var gmap,media_query=768;var pointByAddr=function(address){return GMapPoint(address.getAttribute('data-lat'),address.getAttribute('data-lng'));};var markerCenter=function(map,block){};$(document).on('click','.address',function(){var $address=$(this),$block=$('#addresses');var point=pointByAddr($address);if(point&&gmap){gmap.center(point);markerCenter(gmap,$block);var marker=gmap.markers[0];if(marker){marker.position(point);marker.label($address.find('[property="streetAddress"]').text());}
$address.addClass('active').siblings().removeClass('active');}});$(document).ready(function(){var $addresses=$('#addresses').find('.address');if($addresses.length){var $first=$addresses.first(),$block=$('#addresses');$addresses.each(i=>{var address=$addresses[i];console.log(address)
gmap=GMap('#google-map-'+address.getAttribute('data-label'),{center:pointByAddr(address),zoom:8,styles:[{"featureType":"all","elementType":"labels.text.fill","stylers":[{"saturation":36},{"color":"#000000"},{"lightness":40}]},{"featureType":"all","elementType":"labels.text.stroke","stylers":[{"visibility":"on"},{"color":"#000000"},{"lightness":16}]},{"featureType":"all","elementType":"labels.icon","stylers":[{"visibility":"off"}]},{"featureType":"administrative","elementType":"geometry.fill","stylers":[{"color":"#000000"},{"lightness":20}]},{"featureType":"administrative","elementType":"geometry.stroke","stylers":[{"color":"#000000"},{"lightness":17},{"weight":1.2}]},{"featureType":"administrative","elementType":"labels","stylers":[{"visibility":"off"}]},{"featureType":"administrative.country","elementType":"all","stylers":[{"visibility":"simplified"}]},{"featureType":"administrative.country","elementType":"geometry","stylers":[{"visibility":"simplified"}]},{"featureType":"administrative.country","elementType":"labels.text","stylers":[{"visibility":"simplified"}]},{"featureType":"administrative.province","elementType":"all","stylers":[{"visibility":"off"}]},{"featureType":"administrative.locality","elementType":"all","stylers":[{"visibility":"simplified"},{"saturation":"-100"},{"lightness":"30"}]},{"featureType":"administrative.neighborhood","elementType":"all","stylers":[{"visibility":"off"}]},{"featureType":"administrative.land_parcel","elementType":"all","stylers":[{"visibility":"off"}]},{"featureType":"landscape","elementType":"all","stylers":[{"visibility":"simplified"},{"gamma":"0.00"},{"lightness":"74"}]},{"featureType":"landscape","elementType":"geometry","stylers":[{"color":"#000000"},{"lightness":20}]},{"featureType":"landscape.man_made","elementType":"all","stylers":[{"lightness":"3"}]},{"featureType":"poi","elementType":"all","stylers":[{"visibility":"off"}]},{"featureType":"poi","elementType":"geometry","stylers":[{"color":"#000000"},{"lightness":21}]},{"featureType":"road","elementType":"geometry","stylers":[{"visibility":"simplified"}]},{"featureType":"road.highway","elementType":"geometry.fill","stylers":[{"color":"#000000"},{"lightness":17}]},{"featureType":"road.highway","elementType":"geometry.stroke","stylers":[{"color":"#000000"},{"lightness":29},{"weight":0.2}]},{"featureType":"road.arterial","elementType":"geometry","stylers":[{"color":"#000000"},{"lightness":18}]},{"featureType":"road.local","elementType":"geometry","stylers":[{"color":"#000000"},{"lightness":16}]},{"featureType":"transit","elementType":"geometry","stylers":[{"color":"#000000"},{"lightness":19}]},{"featureType":"water","elementType":"geometry","stylers":[{"color":"#000000"},{"lightness":17}]}]}).on('ready',function(){GMapMarker({map:this,position:this.center(),label:$first.find('[property="streetAddress"]').text(),icon:{url:'/static/img/sprite.svg',size:new google.maps.Size(35,48),origin:new google.maps.Point(0,181),scaledSize:new google.maps.Size(512,302)}});$first.addClass('active');markerCenter(gmap,$block);}).on('resize',function(){var marker=this.markers[0];if(marker){this.center(marker);markerCenter(gmap,$block);}});})}});$(document).ready(function(){$('.reference-field').val(document.referrer);});})(jQuery);;(function($){function choicePlacePopup(continet){$.preloader();return $.ajax({url:window.ajax_views.contacts.place,data:{pk:continet,},type:'GET',success:function(response){$.popup({classes:'contact-popup contact-place-popup',content:response,}).show();}});}
$(document).on('click','.country_state',function(){choicePlacePopup($(this).data('continet'));return false;});$(document).on('click','.open-contact-no-agency-popup',function(){noAgencyPopup($(this).data('id'));return false;});function noAgencyPopup(representative_id){$.preloader();return $.ajax({url:window.ajax_views.contacts.noagency,data:{representative_id:representative_id,},type:'GET',success:function(response){$.popup({classes:'contact-popup contact-no-agency-popup',content:response}).show();}});}
function agentPopup(representative_id,region){$.preloader();return $.ajax({url:window.ajax_views.contacts.agent,data:{representative_id:representative_id,region:region},type:'GET',success:function(response){$.popup({classes:'contact-popup contact-agent-popup',content:response}).show();}});}
$(document).on('click','.open-agent-popup',function(){const states=[{"name":"Alabama","abbreviation":"AL"},{"name":"Alaska","abbreviation":"AK"},{"name":"American Samoa","abbreviation":"AS"},{"name":"Arizona","abbreviation":"AZ"},{"name":"Arkansas","abbreviation":"AR"},{"name":"California","abbreviation":"CA"},{"name":"Colorado","abbreviation":"CO"},{"name":"Connecticut","abbreviation":"CT"},{"name":"Delaware","abbreviation":"DE"},{"name":"District Of Columbia","abbreviation":"DC"},{"name":"Federated States Of Micronesia","abbreviation":"FM"},{"name":"Florida","abbreviation":"FL"},{"name":"Georgia","abbreviation":"GA"},{"name":"Guam","abbreviation":"GU"},{"name":"Hawaii","abbreviation":"HI"},{"name":"Idaho","abbreviation":"ID"},{"name":"Illinois","abbreviation":"IL"},{"name":"Indiana","abbreviation":"IN"},{"name":"Iowa","abbreviation":"IA"},{"name":"Kansas","abbreviation":"KS"},{"name":"Kentucky","abbreviation":"KY"},{"name":"Louisiana","abbreviation":"LA"},{"name":"Maine","abbreviation":"ME"},{"name":"Marshall Islands","abbreviation":"MH"},{"name":"Maryland","abbreviation":"MD"},{"name":"Massachusetts","abbreviation":"MA"},{"name":"Michigan","abbreviation":"MI"},{"name":"Minnesota","abbreviation":"MN"},{"name":"Mississippi","abbreviation":"MS"},{"name":"Missouri","abbreviation":"MO"},{"name":"Montana","abbreviation":"MT"},{"name":"Nebraska","abbreviation":"NE"},{"name":"Nevada","abbreviation":"NV"},{"name":"New Hampshire","abbreviation":"NH"},{"name":"New Jersey","abbreviation":"NJ"},{"name":"New Mexico","abbreviation":"NM"},{"name":"New York","abbreviation":"NY"},{"name":"North Carolina","abbreviation":"NC"},{"name":"North Dakota","abbreviation":"ND"},{"name":"Northern Mariana Islands","abbreviation":"MP"},{"name":"Ohio","abbreviation":"OH"},{"name":"Oklahoma","abbreviation":"OK"},{"name":"Oregon","abbreviation":"OR"},{"name":"Palau","abbreviation":"PW"},{"name":"Pennsylvania","abbreviation":"PA"},{"name":"Puerto Rico","abbreviation":"PR"},{"name":"Rhode Island","abbreviation":"RI"},{"name":"South Carolina","abbreviation":"SC"},{"name":"South Dakota","abbreviation":"SD"},{"name":"Tennessee","abbreviation":"TN"},{"name":"Texas","abbreviation":"TX"},{"name":"Utah","abbreviation":"UT"},{"name":"Vermont","abbreviation":"VT"},{"name":"Virgin Islands","abbreviation":"VI"},{"name":"Virginia","abbreviation":"VA"},{"name":"Washington","abbreviation":"WA"},{"name":"West Virginia","abbreviation":"WV"},{"name":"Wisconsin","abbreviation":"WI"},{"name":"Wyoming","abbreviation":"WY"}]
function regionHandler(v){let reg=v;states.forEach(function(s){if(v===s.name){reg=s.abbreviation;}});return reg;}
var value=$(this)[0].innerText;console.log(regionHandler(value))
agentPopup($(this).data('id'),regionHandler(value));return false;});})(jQuery);}).call(this);